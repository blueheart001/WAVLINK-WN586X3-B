From 10b2e4c22ffacd10a06ac7d55ca6358e334e3632 Mon Sep 17 00:00:00 2001
From: Lei Wei <quic_leiwei@quicinc.com>
Date: Tue, 9 Apr 2024 01:07:22 +0800
Subject: [PATCH 11/44] net:pcs: qcom-ipq9574: Add 1000BASEX interface mode
 support

1000BASEX is used when PCS connects with a 1G SFP module.

Change-Id: Ied7298de3c1ecba74e6457a07fdd6b3ceab79728
Signed-off-by: Lei Wei <quic_leiwei@quicinc.com>
---
 drivers/net/pcs/pcs-qcom-ipq9574.c | 34 +++++++++++++++++++++++++-----
 1 file changed, 29 insertions(+), 5 deletions(-)

diff --git a/drivers/net/pcs/pcs-qcom-ipq9574.c b/drivers/net/pcs/pcs-qcom-ipq9574.c
index db6837882..f11fb21a1 100644
--- a/drivers/net/pcs/pcs-qcom-ipq9574.c
+++ b/drivers/net/pcs/pcs-qcom-ipq9574.c
@@ -28,6 +28,11 @@
 #define PCS_MODE_QSGMII			FIELD_PREP(PCS_MODE_SEL_MASK, 0x1)
 #define PCS_MODE_2500BASEX		FIELD_PREP(PCS_MODE_SEL_MASK, 0x8)
 #define PCS_MODE_XPCS			FIELD_PREP(PCS_MODE_SEL_MASK, 0x10)
+#define PCS_MODE_SGMII_MODE_MASK	GENMASK(6, 4)
+#define PCS_MODE_SGMII_MODE_MAC		FIELD_PREP(PCS_MODE_SGMII_MODE_MASK, \
+						   0x2)
+#define PCS_MODE_SGMII_MODE_1000BASEX	FIELD_PREP(PCS_MODE_SGMII_MODE_MASK, \
+						   0x0)
 
 #define PCS_MII_CTRL(x)			(0x480 + 0x18 * (x))
 #define PCS_MII_ADPT_RESET		BIT(11)
@@ -223,16 +228,23 @@ static int ipq_pcs_config_mode(struct ipq_pcs *qpcs,
 			       phy_interface_t interface)
 {
 	unsigned long rate = 125000000;
-	unsigned int val;
+	unsigned int val, mask;
 	int ret;
 
 	/* Configure PCS interface mode */
+	mask = PCS_MODE_SEL_MASK;
 	switch (interface) {
 	case PHY_INTERFACE_MODE_SGMII:
-		val = PCS_MODE_SGMII;
+		mask |= PCS_MODE_SGMII_MODE_MASK;
+		val = PCS_MODE_SGMII | PCS_MODE_SGMII_MODE_MAC;
 		break;
 	case PHY_INTERFACE_MODE_QSGMII:
-		val = PCS_MODE_QSGMII;
+		mask |= PCS_MODE_SGMII_MODE_MASK;
+		val = PCS_MODE_QSGMII | PCS_MODE_SGMII_MODE_MAC;
+		break;
+	case PHY_INTERFACE_MODE_1000BASEX:
+		mask |= PCS_MODE_SGMII_MODE_MASK;
+		val = PCS_MODE_SGMII | PCS_MODE_SGMII_MODE_1000BASEX;
 		break;
 	case PHY_INTERFACE_MODE_2500BASEX:
 		val = PCS_MODE_2500BASEX;
@@ -246,8 +258,7 @@ static int ipq_pcs_config_mode(struct ipq_pcs *qpcs,
 		return -EOPNOTSUPP;
 	}
 
-	ret = regmap_update_bits(qpcs->regmap, PCS_MODE_CTRL,
-				 PCS_MODE_SEL_MASK, val);
+	ret = regmap_update_bits(qpcs->regmap, PCS_MODE_CTRL, mask, val);
 	if (ret)
 		return ret;
 
@@ -449,6 +460,7 @@ static int ipq_pcs_validate(struct phylink_pcs *pcs, unsigned long *supported,
 	switch (state->interface) {
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		return 0;
 	case PHY_INTERFACE_MODE_2500BASEX:
 		/* In-band autoneg is not supported for 2500BASEX */
@@ -508,6 +520,10 @@ static void ipq_pcs_get_state(struct phylink_pcs *pcs,
 	switch (state->interface) {
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
+		/* SGMII and 1000BASEX in-band autoneg word format are decoded
+		 * by PCS hardware and both placed to the same status register.
+		 */
 		ipq_pcs_get_state_sgmii(qpcs, index, state);
 		break;
 	case PHY_INTERFACE_MODE_2500BASEX:
@@ -541,6 +557,7 @@ static int ipq_pcs_config(struct phylink_pcs *pcs,
 	switch (interface) {
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		return ipq_pcs_config_sgmii(qpcs, index, neg_mode, interface);
 	case PHY_INTERFACE_MODE_2500BASEX:
 		return ipq_pcs_config_2500basex(qpcs);
@@ -551,6 +568,11 @@ static int ipq_pcs_config(struct phylink_pcs *pcs,
 	};
 }
 
+static void ipq_pcs_an_restart(struct phylink_pcs *pcs)
+{
+	/* Currently not used */
+}
+
 static void ipq_pcs_link_up(struct phylink_pcs *pcs,
 			    unsigned int neg_mode,
 			    phy_interface_t interface,
@@ -564,6 +586,7 @@ static void ipq_pcs_link_up(struct phylink_pcs *pcs,
 	switch (interface) {
 	case PHY_INTERFACE_MODE_SGMII:
 	case PHY_INTERFACE_MODE_QSGMII:
+	case PHY_INTERFACE_MODE_1000BASEX:
 		ret = ipq_pcs_link_up_config_sgmii(qpcs, index,
 						   neg_mode, speed);
 		break;
@@ -588,6 +611,7 @@ static const struct phylink_pcs_ops ipq_pcs_phylink_ops = {
 	.pcs_disable = ipq_pcs_disable,
 	.pcs_get_state = ipq_pcs_get_state,
 	.pcs_config = ipq_pcs_config,
+	.pcs_an_restart = ipq_pcs_an_restart,
 	.pcs_link_up = ipq_pcs_link_up,
 };
 
-- 
2.34.1

